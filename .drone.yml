kind: pipeline
type: docker
name: integration

steps:
  - name: fix_permissions
    image: node:16
    commands:
      - chown -R 1000:1000 /drone/src

  - name: kode-analyse
    image: sonarsource/sonar-scanner-cli:latest
    commands:
      - sonar-scanner -Dsonar.projectKey=easv-devops_UndercoverSpillet_AY_JUDVyEVvRW2O60GX5 -Dsonar.sources=. -Dsonar.host.url=http://sonar.setgo.dk:9000 -Dsonar.login=$SONAR_TOKEN
    environment:
      SONAR_TOKEN:
        from_secret: sonarqube_token

  - name: make_tests_executable
    image: node:16
    commands:
      - chmod +x test/unit/.test.cjs

  - name: test_unit
    image: node:16
    commands:
      - npm run test:unit
    environment:
      DRONE_DEBUG: "true"
    timeout: 10m
    resources:
      limits:
        memory: 2GiB
        cpu: 2

  - name: lint
    image: node:16
    commands:
      - npm install eslint eslint-plugin-import eslint-plugin-node eslint-config-airbnb-base --save-dev
      - chmod +x ./node_modules/.bin/eslint
      - npm run lint -- --max-warnings 10 || true
    environment:
      DRONE_DEBUG: "true"
    timeout: 5m
    resources:
      limits:
        memory: 1GiB
        cpu: 1

---

kind: pipeline
type: docker
name: deliver

services:
  - name: mongodb
    image: mongo
    environment:
      MONGO_INITDB_DATABASE: game-database

steps:
  - name: wait_for_mongodb
    image: mvertes/alpine-mongo
    commands:
      - >
        until mongo "mongodb+srv://yonesswaidan:sgg59mcd@game-database.x2asuuz.mongodb.net/game-database" --eval "print('waited for connection')" || sleep 2; do :; done

  - name: start_api_server
    image: node:16
    commands:
      - npm install
      - node server.js &  # Start din API-server i baggrunden

  - name: test
    image: loadimpact/k6:latest
    commands:
      - curl -sSL https://get.k6.io | sh
      - k6 run load_test.js
    depends_on:
      - wait_for_mongodb

  - name: publish_api
    image: plugins/docker
    settings:
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      dockerfile: Dockerfile
      repo: yonesswaidan/undercovergame-api
      tags:
        - latest

  - name: publish_web
    image: plugins/docker
    settings:
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      dockerfile: Dockerfile
      repo: yonesswaidan/undercovergame-web
      tags:
        - latest

---

kind: pipeline
type: docker
name: deploy

steps:
  - name: release_api
    image: plugins/docker
    settings:
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      dockerfile: Dockerfile
      repo: yonesswaidan/undercovergame-api
      tags:
        - production

  - name: release_web
    image: plugins/docker
    settings:
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      dockerfile: Dockerfile
      repo: yonesswaidan/undercovergame-web
      tags:
        - production

services:
  - name: mongodb
    image: mongo
    environment:
      MONGO_INITDB_DATABASE: game-database

secrets:
  - name: docker_username
  - name: docker_password
  - name: sonarqube_token
