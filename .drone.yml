kind: pipeline
type: docker
name: default

steps:
    - name: code-analysis
      image: boulundeasv/dotnet-sdk-with-java
      environment:
        SONARSECRET:
          from_secret: SonarQubeSecret
      commands:
      - dotnet sonarscanner begin /k:"easv-devops_UndercoverSpillet_AY_Gm45-EVvRW2O60GUR" /d:sonar.host.url="http://sonar.setgo.dk:9000"  /d:sonar.token="sqp_7eb3fb8af26abd23ab80315bf1a832530d424a2d"
      - dotnet build
      - dotnet sonarscanner end /d:sonar.token="sqp_7eb3fb8af26abd23ab80315bf1a832530d424a2d"

  - name: installer_afhængigheder
    image: node:16
    commands:
      - npm install
    environment:
      DRONE_DEBUG: true
    timeout: 10m
    resources:
      limits:
        memory: 2GiB
        cpu: 2

  - name: lint
    image: node:16
    commands:
      - npm install eslint --save-dev
      - npm run lint -- --max-warnings 10 || true
    environment:
      DRONE_DEBUG: true
    timeout: 5m
    resources:
      limits:
        memory: 1GiB
        cpu: 1

  - name: gør_tests_eksekverbare
    image: node:16
    commands:
      - chmod +x test/unit/.test.cjs
      - chmod +x test/integration/.test.cjs

  - name: start_server_og_test_integration
    image: node:16
    commands:
      - node server.js &  # Start serveren i baggrunden
      - sleep 5  # Vent 5 sekunder for at sikre, at appen starter
      - npm run test:integration  # Kør integrationstest
    environment:
      DRONE_DEBUG: true
    timeout: 15m
    resources:
      limits:
        memory: 2GiB
        cpu: 2

  - name: test_unit
    image: node:16
    commands:
      - npm run test:unit
    environment:
      DRONE_DEBUG: true
    timeout: 10m
    resources:
      limits:
        memory: 2GiB
        cpu: 2

  - name: byg
    image: node:16
    commands:
      - npm run build
    environment:
      DRONE_DEBUG: true
    timeout: 10m
    resources:
      limits:
        memory: 2GiB
        cpu: 2

  - name: byg_dotnet
    image: mcr.microsoft.com/dotnet/core/sdk:3.1
    commands:
      - dotnet build

  - name: sonar_slut
    image: mcr.microsoft.com/dotnet/core/sdk:3.1
    environment:
      SONAR_TOKEN: ${SONAR_TOKEN}
      PATH: /root/.dotnet/tools:$PATH
    commands:
      - export PATH="$PATH:/root/.dotnet/tools"
      - dotnet-sonarscanner end /d:sonar.login="${SONAR_TOKEN}"

  - name: docker_byg
    image: plugins/docker
    settings:
      repo: yonesswaidan/undercovergame
      tags: latest
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password

services:
  - name: mongodb
    image: mongo
    environment:
      MONGO_INITDB_DATABASE: game-database

secrets:
  - name: docker_username
  - name: docker_password
  - name: sonar_token
