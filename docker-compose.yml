kind: pipeline
type: docker
name: default

steps:
  - name: fix_permissions
    image: node:16
    commands:
      - chown -R 1000:1000 /drone/src

  - name: sonarqube_scanner
    image: sonarsource/sonar-scanner-cli:latest
    commands:
      - sonar-scanner -Dsonar.projectKey=easv-devops_UndercoverSpillet_AY_G0dy5EVvRW2O60GVK -Dsonar.sources=. -Dsonar.host.url=http://sonar.setgo.dk:9000 -Dsonar.login=$SONAR_TOKEN
    environment:
      SONAR_TOKEN:
        from_secret: sonarqube_token

  - name: installer_afhængigheder
    image: node:16
    commands:
      - npm install
    environment:
      DRONE_DEBUG: true
    timeout: 10m
    resources:
      limits:
        memory: 2GiB
        cpu: 2

  - name: lint
    image: node:16
    commands:
      - npm install eslint --save-dev
      - npm run lint -- --max-warnings 10 || true
    environment:
      DRONE_DEBUG: true
    timeout: 5m
    resources:
      limits:
        memory: 1GiB
        cpu: 1

  - name: gør_tests_eksekverbare
    image: node:16
    commands:
      - chmod +x test/unit/.test.cjs
      - chmod +x test/integration/.test.cjs

  - name: start_server_og_test_integration
    image: node:16
    commands:
      - node server.js &  # Start serveren i baggrunden
      - sleep 5  # Vent 5 sekunder for at sikre, at appen starter
      - npm run test:integration  # Kør integrationstest
    environment:
      DRONE_DEBUG: true
    timeout: 15m
    resources:
      limits:
        memory: 2GiB
        cpu: 2

  - name: test_unit
    image: node:16
    commands:
      - npm run test:unit
    environment:
      DRONE_DEBUG: true
    timeout: 10m
    resources:
      limits:
        memory: 2GiB
        cpu: 2

  - name: byg
    image: node:16
    commands:
      - npm run build
    environment:
      DRONE_DEBUG: true
    timeout: 10m
    resources:
      limits:
        memory: 2GiB
        cpu: 2

  - name: generate_coverage_report
    image: node:16
    commands:
      - npm run coverage
    environment:
      DRONE_DEBUG: true
    timeout: 10m
    resources:
      limits:
        memory: 2GiB
        cpu: 2

  - name: deploy_to_staging
    image: plugins/docker
    settings:
      repo: yonesswaidan/undercovergame-staging
      tags: staging
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
    when:
      branch:
        - staging

  - name: deploy_to_production
    image: plugins/docker
    settings:
      repo: yonesswaidan/undercovergame
      tags: latest
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
    when:
      branch:
        - main

  - name: notify
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_webhook
      channel: devops
      username: droneci

services:
  - name: mongodb
    image: mongo
    environment:
      MONGO_INITDB_DATABASE: game-database

secrets:
  - name: docker_username
  - name: docker_password
  - name: sonarqube_token
  - name: slack_webhook
